// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
--------- start snapshot of hello-world (account 849066399364) stack  --------
Tags: {}
Resources:
  helloworldtargetGroup072B8BB0:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckPath: /
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: '200'
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '15'
        - Key: stickiness.enabled
          Value: 'false'
      TargetType: ip
      VpcId: vpc-0aea5810a6a802e2f
  helloworldtaskDefinitionTaskRoleA8F6AE15:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
  helloworldtaskDefinition0C81A936:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: !Sub >-
            849066399364.dkr.ecr.ap-southeast-2.\${AWS::URLSuffix}/cdk-pinecodes-container-assets-849066399364-ap-southeast-2:[HASH REMOVED FROM SNAPSHOT]
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref helloworldtaskDefinitionappLogGroup32C744AC
              awslogs-stream-prefix: hello-world/hello-world
              awslogs-region: ap-southeast-2
          Name: app
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
      Cpu: '256'
      ExecutionRoleArn: !GetAtt helloworldtaskDefinitionExecutionRoleC93882F0.Arn
      Family: helloworldtaskDefinition84943F37
      Memory: '512'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt helloworldtaskDefinitionTaskRoleA8F6AE15.Arn
  helloworldtaskDefinitionappLogGroup32C744AC:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  helloworldtaskDefinitionExecutionRoleC93882F0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
  helloworldtaskDefinitionExecutionRoleDefaultPolicyB2428EE2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource: !Join 
              - ''
              - - 'arn:'
                - !Ref AWS::Partition
                - >-
                  :ecr:ap-southeast-2:849066399364:repository/cdk-pinecodes-container-assets-849066399364-ap-southeast-2
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: '*'
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: !GetAtt helloworldtaskDefinitionappLogGroup32C744AC.Arn
        Version: 2012-10-17
      PolicyName: helloworldtaskDefinitionExecutionRoleDefaultPolicyB2428EE2
      Roles:
        - !Ref helloworldtaskDefinitionExecutionRoleC93882F0
  helloworldcluster8A53E29D:
    Type: AWS::ECS::Cluster
  helloworldclusterDF6D02E6:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      Cluster: !Ref helloworldcluster8A53E29D
      DefaultCapacityProviderStrategy: []
  helloworldserviceService90E54A69:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
      Cluster: !Ref helloworldcluster8A53E29D
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LoadBalancers:
        - ContainerName: app
          ContainerPort: 80
          TargetGroupArn: !Ref helloworldtargetGroup072B8BB0
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !GetAtt helloworldserviceSecurityGroupDAB172A9.GroupId
          Subnets:
            - subnet-017c172356cdb7d8c
            - subnet-0eed0e5bd3d954b96
            - subnet-0bfd593f1f7400c18
      TaskDefinition: !Ref helloworldtaskDefinition0C81A936
    DependsOn:
      - helloworldlistenerRule27A0E55C
  helloworldserviceSecurityGroupDAB172A9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: hello-world/hello-world/service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      VpcId: vpc-0aea5810a6a802e2f
  helloworldserviceSecurityGroupfromhelloworldlistenerSecurityGroupsg0981fc0e7cd1db05a78EBDA77809C807DC1:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId: !GetAtt helloworldserviceSecurityGroupDAB172A9.GroupId
      SourceSecurityGroupId: sg-0981fc0e7cd1db05a
      ToPort: 80
  helloworldlistenerSecurityGroupsg0981fc0e7cd1db05atohelloworldserviceSecurityGroupA1DC496380D8DBD066:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: sg-0981fc0e7cd1db05a
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId: !GetAtt helloworldserviceSecurityGroupDAB172A9.GroupId
      FromPort: 80
      ToPort: 80
  helloworldpriorityresource258B13EA:
    Type: Custom::ListenerRulePriority
    Properties:
      ServiceToken: !ImportValue ListenerRulePriorityServiceToken
      listenerArn: >-
        arn:aws:elasticloadbalancing:ap-southeast-2:849066399364:listener/app/shared/0b9a67d27227b372/040c16e3cbe39e25
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  helloworldlistenerRule27A0E55C:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - TargetGroupArn: !Ref helloworldtargetGroup072B8BB0
          Type: forward
      Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
              - hello-world.pine.codes
      ListenerArn: >-
        arn:aws:elasticloadbalancing:ap-southeast-2:849066399364:listener/app/shared/0b9a67d27227b372/040c16e3cbe39e25
      Priority: !GetAtt helloworldpriorityresource258B13EA.priority
  helloworlddnsCEC9186C:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: hello-world.pine.codes.
      Type: CNAME
      HostedZoneId: Z08845946NQV8QJGIVXX
      ResourceRecords:
        - internal-shared-1456911017.ap-southeast-2.elb.amazonaws.com
      TTL: '300'
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/pinecodes/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert: !Not 
          - Fn::Contains:
              - - '1'
                - '2'
                - '3'
                - '4'
                - '5'
              - !Ref BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

--------- end of stack snapshot hello-world (account 849066399364) ---------
`;
